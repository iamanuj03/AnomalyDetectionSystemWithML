#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Dec 19, 2019 09:24:01 AM +04  platform: Windows NT

import sys
import os
from GUI.Events.dataextractionevents import extract_data

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

from GUI.Design import training_support
from MLScripts.clsKNN import clsKNN
from MLScripts.clsOneClassSVM import oneClassSVM

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    training_support.set_Tk_var()
    top = model_training (root)
    training_support.init(root, top)
    root.mainloop()

w = None
def create_model_training(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    training_support.set_Tk_var()
    top = model_training (w)
    training_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_model_training():
    global w
    w.destroy()
    w = None

class model_training:
    def executeScript(self):
        train_speed = training_support.che48.get()
        train_time  = training_support.che52.get()
        knn = clsKNN()
        svm = oneClassSVM()
        if train_speed == 1:
            svm.classify('CSVFiles/'+str(self.csv_name))
        if train_time == 1:
            knn.classify('CSVFiles/'+str(self.csv_name))
            

    def uploadCSV(self):
        csv = extract_data.uploadCSVFile()
        self.txtFileName.insert('1.0',csv)
        self.csv_name = csv

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        self.csv_name = tk.StringVar()

        top.geometry("602x239+392+72")
        top.minsize(120, 1)
        top.maxsize(2736, 749)
        top.resizable(1, 1)
        top.title("Model Training")
        top.configure(background="#d9d9d9")

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.0, rely=0.0, relheight=1.0, relwidth=1.0)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#d9d9d9")

        self.lblFeatureSelect = tk.Label(self.Frame1)
        self.lblFeatureSelect.place(relx=0.133, rely=0.46, height=21, width=84)
        self.lblFeatureSelect.configure(activebackground="#f9f9f9")
        self.lblFeatureSelect.configure(activeforeground="black")
        self.lblFeatureSelect.configure(background="#d9d9d9")
        self.lblFeatureSelect.configure(disabledforeground="#a3a3a3")
        self.lblFeatureSelect.configure(foreground="#000000")
        self.lblFeatureSelect.configure(highlightbackground="#d9d9d9")
        self.lblFeatureSelect.configure(highlightcolor="black")
        self.lblFeatureSelect.configure(text='''Select feature''')

        self.txtFileName = tk.Text(self.Frame1)
        self.txtFileName.place(relx=0.432, rely=0.126, relheight=0.142
                   , relwidth=0.389)
        self.txtFileName.configure(background="white")
        self.txtFileName.configure(font="TkTextFont")
        self.txtFileName.configure(foreground="black")
        self.txtFileName.configure(highlightbackground="#d9d9d9")
        self.txtFileName.configure(highlightcolor="black")
        self.txtFileName.configure(insertbackground="black")
        self.txtFileName.configure(selectbackground="#c4c4c4")
        self.txtFileName.configure(selectforeground="black")
        self.txtFileName.configure(wrap="word")

        self.chkSpeed = tk.Checkbutton(self.Frame1)
        self.chkSpeed.place(relx=0.399, rely=0.418, relheight=0.146
                 , relwidth=0.168)
        self.chkSpeed.configure(activebackground="#ececec")
        self.chkSpeed.configure(activeforeground="#000000")
        self.chkSpeed.configure(background="#d9d9d9")
        self.chkSpeed.configure(disabledforeground="#a3a3a3")
        self.chkSpeed.configure(foreground="#000000")
        self.chkSpeed.configure(highlightbackground="#d9d9d9")
        self.chkSpeed.configure(highlightcolor="black")
        self.chkSpeed.configure(justify='left')
        self.chkSpeed.configure(text='''Speed Anomaly''')
        self.chkSpeed.configure(variable=training_support.che48)

        self.btnTrain = tk.Button(self.Frame1,command=self.executeScript)
        self.btnTrain.place(relx=0.316, rely=0.669, height=34, width=207)
        self.btnTrain.configure(activebackground="#ececec")
        self.btnTrain.configure(activeforeground="#000000")
        self.btnTrain.configure(background="#d9d9d9")
        self.btnTrain.configure(disabledforeground="#a3a3a3")
        self.btnTrain.configure(foreground="#000000")
        self.btnTrain.configure(highlightbackground="#d9d9d9")
        self.btnTrain.configure(highlightcolor="black")
        self.btnTrain.configure(pady="0")
        self.btnTrain.configure(text='''Start Training''')

        
        self.chkYellowbox = tk.Checkbutton(self.Frame1)
        self.chkYellowbox.place(relx=0.631, rely=0.418, relheight=0.146
                , relwidth=0.301)
        self.chkYellowbox.configure(activebackground="#ececec")
        self.chkYellowbox.configure(activeforeground="#000000")
        self.chkYellowbox.configure(background="#d9d9d9")
        self.chkYellowbox.configure(disabledforeground="#a3a3a3")
        self.chkYellowbox.configure(foreground="#000000")
        self.chkYellowbox.configure(highlightbackground="#d9d9d9")
        self.chkYellowbox.configure(highlightcolor="black")
        self.chkYellowbox.configure(justify='left')
        self.chkYellowbox.configure(text='''Time in yellowbox anomaly''')
        self.chkYellowbox.configure(variable=training_support.che52)

        self.btnUploadCSV = tk.Button(self.Frame1,command = self.uploadCSV)
        self.btnUploadCSV.place(relx=0.133, rely=0.126, height=34, width=97)
        self.btnUploadCSV.configure(activebackground="#ececec")
        self.btnUploadCSV.configure(activeforeground="#000000")
        self.btnUploadCSV.configure(background="#d9d9d9")
        self.btnUploadCSV.configure(disabledforeground="#a3a3a3")
        self.btnUploadCSV.configure(foreground="#000000")
        self.btnUploadCSV.configure(highlightbackground="#d9d9d9")
        self.btnUploadCSV.configure(highlightcolor="black")
        self.btnUploadCSV.configure(pady="0")
        self.btnUploadCSV.configure(text='''Upload CSV file''')

if __name__ == '__main__':
    vp_start_gui()





