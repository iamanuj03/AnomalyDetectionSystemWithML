#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Dec 15, 2019 09:32:29 PM +04  platform: Windows NT

import sys
import os
from GUI.Events.dataextractionevents import extract_data
from threading import Thread

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

from GUI.Design import dataextraction_support




def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    dataextraction_support.set_Tk_var()
    top = DataExtract (root)
    dataextraction_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    dataextraction_support.set_Tk_var()
    top = Toplevel1 (w)
    dataextraction_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None



class DataExtract:
    def start_gui():
        vp_start_gui()
   
    def uploadVideo(self):
        videoName = extract_data.uploadVideoFile()
        self.txtVideoUpload.insert('1.0',videoName)
        print(videoName)
        self.video_name = videoName

    def uploadConfigFile(self):
        config = extract_data.uploadConfigFile()
        self.txtConfigName.insert('1.0',config)
        print(config)
        self.config_name = config
        

    def uploadCSV(self):
        csv = extract_data.uploadCSVFile()
        self.txtCSVUpload.insert('1.0',csv)
        print(csv)
        self.csv_name = csv

    def executeScript(self):
        extract_speed = dataextraction_support.che65.get()
        extract_time = dataextraction_support.che66.get()
        #print(test)
        if extract_speed:
            os.system('speedAnomalyTest.py --conf config/'+ self.config_name +' --video videos/' + self.video_name+' --csv CSVFiles/'+self.csv_name+' --model Models/oneclass_ebene_v2.model')
        if extract_time:
            os.system('yellow_box_ssd.py --conf config/'+ self.config_name +' --video videos/' + self.video_name+' --csv CSVFiles/'+self.csv_name+' --model Models/knn_casernes_v1.model')
    
    def run_thread(self,name,func):
        Thread(target=self.startExtraction,args=(name,func)).start()
    
    def btnExtract_clicked(self):
        self.run_thread('test',self.executeScript)

    def startExtraction(self,name,func):
        self.barScriptExecution.start(interval=10)
        func()
        self.barScriptExecution.stop()
       
    def sample_function(self):
        time.sleep(2)

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        #private variables to store video file and csv file names
        self.video_name = tk.StringVar()
        self.csv_name = tk.StringVar()
        self.config_name = tk.StringVar()

        #self.buttons = [self.btnUpload,self.btnCSVUpload,self.btnExtract,self.btnUploadConfig]

        top.geometry("600x483+342+121")
        top.minsize(120, 1)
        top.maxsize(1370, 749)
        top.resizable(1, 1)
        top.title("Data Extraction")
        top.configure(background="#d9d9d9")

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.0, rely=0.0, relheight=1.0, relwidth=1.0)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#d9d9d9")

        self.btnUpload = tk.Button(self.Frame1,command = self.uploadVideo)
        self.btnUpload.place(relx=0.125, rely=0.102, height=34, width=127)
        self.btnUpload.configure(activebackground="#ececec")
        self.btnUpload.configure(activeforeground="#000000")
        self.btnUpload.configure(background="#d9d9d9")
        self.btnUpload.configure(cursor="fleur")
        self.btnUpload.configure(disabledforeground="#a3a3a3")
        self.btnUpload.configure(foreground="#000000")
        self.btnUpload.configure(highlightbackground="#d9d9d9")
        self.btnUpload.configure(highlightcolor="black")
        self.btnUpload.configure(pady="0")
        self.btnUpload.configure(text='''Upload Video File''')

        self.btnCSVUpload = tk.Button(self.Frame1,command = self.uploadCSV)
        self.btnCSVUpload.place(relx=0.125, rely=0.22, height=34, width=127)
        self.btnCSVUpload.configure(activebackground="#ececec")
        self.btnCSVUpload.configure(activeforeground="#000000")
        self.btnCSVUpload.configure(background="#d9d9d9")
        self.btnCSVUpload.configure(disabledforeground="#a3a3a3")
        self.btnCSVUpload.configure(foreground="#000000")
        self.btnCSVUpload.configure(highlightbackground="#d9d9d9")
        self.btnCSVUpload.configure(highlightcolor="black")
        self.btnCSVUpload.configure(pady="0")
        self.btnCSVUpload.configure(text='''Upload CSV File''')

        self.txtVideoUpload = tk.Text(self.Frame1)
        self.txtVideoUpload.place(relx=0.501, rely=0.102, relheight=0.058
                , relwidth=0.383)
        self.txtVideoUpload.configure(background="white")
        self.txtVideoUpload.configure(font="TkTextFont")
        self.txtVideoUpload.configure(foreground="black")
        self.txtVideoUpload.configure(highlightbackground="#d9d9d9")
        self.txtVideoUpload.configure(highlightcolor="black")
        self.txtVideoUpload.configure(insertbackground="black")
        self.txtVideoUpload.configure(selectbackground="#c4c4c4")
        self.txtVideoUpload.configure(selectforeground="black")
        self.txtVideoUpload.configure(state='normal')
        self.txtVideoUpload.configure(wrap="word")

        self.TSeparator1 = ttk.Separator(self.Frame1)
        self.TSeparator1.place(relx=0.419, rely=0.074, relheight=0.457)
        self.TSeparator1.configure(orient="vertical")

        self.txtCSVUpload = tk.Text(self.Frame1)
        self.txtCSVUpload.place(relx=0.501, rely=0.22, relheight=0.058
                , relwidth=0.383)
        self.txtCSVUpload.configure(background="white")
        self.txtCSVUpload.configure(font="TkTextFont")
        self.txtCSVUpload.configure(foreground="black")
        self.txtCSVUpload.configure(highlightbackground="#d9d9d9")
        self.txtCSVUpload.configure(highlightcolor="black")
        self.txtCSVUpload.configure(insertbackground="black")
        self.txtCSVUpload.configure(selectbackground="#c4c4c4")
        self.txtCSVUpload.configure(selectforeground="black")
        self.txtCSVUpload.configure(state='normal')
        self.txtCSVUpload.configure(wrap="word")

        self.lblRadio = tk.Label(self.Frame1)
        self.lblRadio.place(relx=0.125, rely=0.338, height=51, width=124)
        self.lblRadio.configure(background="#d9d9d9")
        self.lblRadio.configure(disabledforeground="#a3a3a3")
        self.lblRadio.configure(foreground="#000000")
        self.lblRadio.configure(text='''Choose feature''')

        self.btnExtract = tk.Button(self.Frame1,command=self.btnExtract_clicked)
        self.btnExtract.place(relx=0.125, rely=0.592, height=34, width=127)
        self.btnExtract.configure(activebackground="#ececec")
        self.btnExtract.configure(activeforeground="#000000")
        self.btnExtract.configure(background="#d9d9d9")
        self.btnExtract.configure(disabledforeground="#a3a3a3")
        self.btnExtract.configure(foreground="#000000")
        self.btnExtract.configure(highlightbackground="#d9d9d9")
        self.btnExtract.configure(highlightcolor="black")
        self.btnExtract.configure(pady="0")
        self.btnExtract.configure(text='''Extract Data''')

        self.barScriptExecution = ttk.Progressbar(self.Frame1,mode='indeterminate')
        self.barScriptExecution.place(relx=0.501, rely=0.592, relwidth=0.394
                , relheight=0.0, height=22)
        self.barScriptExecution.configure(length="100")
        #self.barScriptExecution.pack(pady=10)

        self.msgbox = tk.Message(self.Frame1)
        self.msgbox.place(relx=0.125, rely=0.694, relheight=0.259
                , relwidth=0.769)
        self.msgbox.configure(background="#ffffff")
        self.msgbox.configure(foreground="#000000")
        self.msgbox.configure(highlightbackground="#d9d9d9")
        self.msgbox.configure(highlightcolor="black")
        self.msgbox.configure(width=430)

        self.chkSpeed = tk.Checkbutton(self.Frame1)
        self.chkSpeed.place(relx=0.501, rely=0.355, relheight=0.042
                , relwidth=0.181)
        self.chkSpeed.configure(activebackground="#ececec")
        self.chkSpeed.configure(activeforeground="#000000")
        self.chkSpeed.configure(background="#d9d9d9")
        self.chkSpeed.configure(disabledforeground="#a3a3a3")
        self.chkSpeed.configure(foreground="#000000")
        self.chkSpeed.configure(highlightbackground="#d9d9d9")
        self.chkSpeed.configure(highlightcolor="black")
        self.chkSpeed.configure(justify='left')
        self.chkSpeed.configure(text='''Vehicle Speed''')
        self.chkSpeed.configure(variable=dataextraction_support.che65)

        self.chkYellow = tk.Checkbutton(self.Frame1)
        self.chkYellow.place(relx=0.698, rely=0.355, relheight=0.042
                , relwidth=0.224)
        self.chkYellow.configure(activebackground="#ececec")
        self.chkYellow.configure(activeforeground="#000000")
        self.chkYellow.configure(background="#d9d9d9")
        self.chkYellow.configure(disabledforeground="#a3a3a3")
        self.chkYellow.configure(foreground="#000000")
        self.chkYellow.configure(highlightbackground="#d9d9d9")
        self.chkYellow.configure(highlightcolor="black")
        self.chkYellow.configure(justify='left')
        self.chkYellow.configure(text='''Time In Yellowbox''')
        self.chkYellow.configure(variable=dataextraction_support.che66)

        self.btnUploadConfig = tk.Button(self.Frame1,command=self.uploadConfigFile)
        self.btnUploadConfig.place(relx=0.125, rely=0.457, height=34, width=127)
        self.btnUploadConfig.configure(activebackground="#ececec")
        self.btnUploadConfig.configure(activeforeground="#000000")
        self.btnUploadConfig.configure(background="#d9d9d9")
        self.btnUploadConfig.configure(disabledforeground="#a3a3a3")
        self.btnUploadConfig.configure(foreground="#000000")
        self.btnUploadConfig.configure(highlightbackground="#d9d9d9")
        self.btnUploadConfig.configure(highlightcolor="black")
        self.btnUploadConfig.configure(pady="0")
        self.btnUploadConfig.configure(text='''Upload Config file''')

        self.txtConfigName = tk.Text(self.Frame1)
        self.txtConfigName.place(relx=0.501, rely=0.457, relheight=0.058
                , relwidth=0.383)
        self.txtConfigName.configure(background="white")
        self.txtConfigName.configure(font="TkTextFont")
        self.txtConfigName.configure(foreground="black")
        self.txtConfigName.configure(highlightbackground="#d9d9d9")
        self.txtConfigName.configure(highlightcolor="black")
        self.txtConfigName.configure(insertbackground="black")
        self.txtConfigName.configure(selectbackground="#c4c4c4")
        self.txtConfigName.configure(selectforeground="black")
        self.txtConfigName.configure(wrap="word")



if __name__ == '__main__':
    vp_start_gui()





